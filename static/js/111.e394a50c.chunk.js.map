{"version":3,"file":"static/js/111.e394a50c.chunk.js","mappings":"+PAGaA,GAAOC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAkBE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,8GAQzBC,EAAQJ,EAAAA,GAAAA,MAAYK,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,gCAIpBG,GAAeN,EAAAA,EAAAA,IAAOO,EAAAA,GAAPP,CAA0BQ,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,wB,uJCPhDM,EAAgBC,EAAAA,KAAaC,MAAM,CACvCC,MAAOF,EAAAA,GAAW,oBACfE,MAAM,uBACNC,IAAI,GAAI,aACRC,SAAS,YACZC,SAAUL,EAAAA,GAAW,oBAClBM,IAAI,EAAG,2CACPH,IAAI,GAAI,aACRC,SAAS,cAGDG,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MAEjB,OACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CACLC,cAAe,CAAEV,MAAO,GAAIG,SAAU,IACtCQ,iBAAkBd,EAClBe,SAAU,SAACC,EAAQC,GACjBR,GAASS,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,GAAC,CAAC,EAAIH,KACpBC,EAAQG,WACV,EAAEC,UAEFC,EAAAA,EAAAA,MAAChC,EAAAA,GAAI,CAAA+B,SAAA,EACHV,EAAAA,EAAAA,KAAChB,EAAAA,GAAK,CAAC4B,QAAQ,QAAOF,SAAC,WACvBV,EAAAA,EAAAA,KAACa,EAAAA,GAAK,CAACC,KAAK,QAAQC,KAAK,WACzBf,EAAAA,EAAAA,KAACd,EAAAA,GAAY,CAAC6B,KAAK,QAAQC,UAAU,SACrChB,EAAAA,EAAAA,KAAChB,EAAAA,GAAK,CAAC4B,QAAQ,WAAUF,SAAC,cAC1BV,EAAAA,EAAAA,KAACa,EAAAA,GAAK,CAACC,KAAK,WAAWC,KAAK,cAC5Bf,EAAAA,EAAAA,KAACd,EAAAA,GAAY,CAAC6B,KAAK,WAAWC,UAAU,SACxChB,EAAAA,EAAAA,KAACiB,EAAAA,EAAM,CAACH,KAAK,SAAQJ,SAAC,eAI9B,EC/BA,EATc,WACZ,OACEC,EAAAA,EAAAA,MAAAO,EAAAA,SAAA,CAAAR,SAAA,EACEV,EAAAA,EAAAA,KAAA,MAAAU,SAAI,WACJV,EAAAA,EAAAA,KAACH,EAAS,MAGhB,C","sources":["components/Formik/Formik.styled.jsx","components/LoginForm/LoginForm.jsx","pages/Login.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Form as FormikForm, ErrorMessage as FormikErrorMessage } from 'formik';\n\nexport const Form = styled(FormikForm)`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  width: 400px;\n  margin-bottom: 50px;\n`;\n\nexport const Label = styled.label`\n  font-weight: bold;\n`;\n\nexport const ErrorMessage = styled(FormikErrorMessage)`\n  color: red;\n`;\n","import { Field, Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/operations';\nimport { Button } from 'components/Button/Button.styled';\nimport { Form, Label, ErrorMessage } from 'components/Formik/Formik.styled';\n\n/* Схема валідації */\nconst ContactSchema = Yup.object().shape({\n  email: Yup.string('Must be a string')\n    .email('Enter a valid email')\n    .max(50, 'Too Long!')\n    .required('Required'),\n  password: Yup.string('Must be a string')\n    .min(6, 'Password must contain minimum 6 symbols')\n    .max(50, 'Too Long!')\n    .required('Required'),\n});\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <Formik\n      initialValues={{ email: '', password: '' }}\n      validationSchema={ContactSchema}\n      onSubmit={(values, actions) => {\n        dispatch(logIn({ ...values }));\n        actions.resetForm();\n      }}\n    >\n      <Form>\n        <Label htmlFor=\"email\">Email</Label>\n        <Field type=\"email\" name=\"email\" />\n        <ErrorMessage name=\"email\" component=\"div\"></ErrorMessage>\n        <Label htmlFor=\"password\">Password</Label>\n        <Field type=\"password\" name=\"password\" />\n        <ErrorMessage name=\"password\" component=\"div\"></ErrorMessage>\n        <Button type=\"submit\">Log In</Button>\n      </Form>\n    </Formik>\n  );\n};\n","import { LoginForm } from 'components/LoginForm/LoginForm';\n\nconst Login = () => {\n  return (\n    <>\n      <h2>Login</h2>\n      <LoginForm />\n    </>\n  );\n};\n\nexport default Login;\n"],"names":["Form","styled","FormikForm","_templateObject","_taggedTemplateLiteral","Label","_templateObject2","ErrorMessage","FormikErrorMessage","_templateObject3","ContactSchema","Yup","shape","email","max","required","password","min","LoginForm","dispatch","useDispatch","_jsx","Formik","initialValues","validationSchema","onSubmit","values","actions","logIn","_objectSpread","resetForm","children","_jsxs","htmlFor","Field","type","name","component","Button","_Fragment"],"sourceRoot":""}